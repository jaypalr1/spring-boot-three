plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.jay'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        // Swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

        // Utility
        implementation 'commons-io:commons-io:2.15.1'
        implementation 'com.google.guava:guava:33.0.0-jre'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

        // Test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    //Need to add this in multi module project or dependency management won't work for sub projects
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.1'
        }
    }

    tasks.named('test') {
        useJUnitPlatform()

        afterTest { desc, result ->
            logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }

        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTest result: ${result.resultType}"
                println "Test summary: ${result.testCount} tests, " +
                        "${result.successfulTestCount} succeeded, " +
                        "${result.failedTestCount} failed, " +
                        "${result.skippedTestCount} skipped"
            }
        }
    }
}

//In multi module project we must set it to false in root/parent 'build.gradle' file so that it doesn't look for main class
bootJar {
    enabled = false
}

jar {
    enabled = true
}
